    " ,v (vsplit)    nmap <leader>v :vspl<cr>    " ,cv (close other vertical split)    nmap <leader>cv <c-w><c-w>:q<cr>,V
>,v
c,v
s,v
e,v
<,v
    {,V
    },V
        config  = getInitialConfig();,V
        config = getInitialConfig();,V
        createTestDb();,V
        writeln("Recreating test db...");,V
    getEmailIdByMessageId => dbEmail,V
",v
,V
    if has("win64") || has("win32")        "set guifont=monaco:h10:cansi        "set guifont=meslo\ lg\ l\ dz:h11:cansi        "set guifont=droid\ sans\ mono:h11:cansi        set guifont=Droid\ Sans\ Mono\ Slashed\ for\ Pow:h10.5:cANSI    else        set guifont=Ubuntu\ Mono\ 10.5    endif,V
    assert(getEmailIdByMessageId("CAAfONcs2L4Y68aPxihL9Hk0PnuapXgKr0ZGP6z4HjPLqOv+PWg@mail.gmail.com") !=           getEmailIdByMessageId("AANLkTi=KRf9FL0EqQ0AVm=pA3DCBgiXYR=vnECs1gUMe@mail.gmail.com") !=           getEmailIdByMessageId("CAGA-+RScZe0tqmG4rbPTSrSCKT8BmkNAGBUOgvCOT5ywycZzZA@mail.gmail.com") !=            getEmailIdByMessageId("CAGA-+RThgLfRakYHjW5Egq9xkctTwwqukHgUKxs1y_yoDZCM8w@mail.gmail.com") !=           "");,V
    assert(count(arr, id1) == 1);,V
    auto id1 = ,V
           getEmailIdByMessageId("doesntexist") != "");,V
(,v
assert,v
 "53a93f51980f7da618000008");,v
"53a93f51980f7da618000005");,v
 "53a93f51980f7da618000003");,v
 "53a93f51980f7da618000000");,v
    writeln(getEmailIdByMessageId("CAAfONcs2L4Y68aPxihL9Hk0PnuapXgKr0ZGP6z4HjPLqOv+PWg@mail.gmail.com"));,V
getEmailIdByMessageId("CAAfONcs2L4Y68aPxihL9Hk0PnuapXgKr0ZGP6z4HjPLqOv+PWg@mail.gmail.com") == "53a93f51980f7da618000000");,v
    writeln("XXX 1");,V
// XXX tests when I've the test DB,V
    jsonizeField ,V
    writeln(email.jsonizeHeader("Date", true, true));,V
`,v
"to": " Test User2 <testuser@testdatabase.com>",`);,v
to,v
    assert(email.jsonizeHeader("to") == `"to": " Test User2 <testuser@testdatabase.com>",`);,V
o,v
t,v
u,v
r,v
 ,v
,,v
    writeln(email.jsonizeHeader("from"));,V
i,v
D,v
n,v
a,v
m,v
tConfig().,v
g,v
 backendTestEmailsDir,,v
getConfig().mainDir,,v
b,v
version,V
email,v
l,v
        "action_tagFavorite" : true,,V
string jsonizeHeader(IncomingEmail email, string headerName, bool removeQuotes = false, bool onlyValue=false){    string ret;    auto hdr = email.getHeader(headerName);    if (hdr.rawValue.length)    {        string strHeader = hdr.rawValue;        if (removeQuotes)            strHeader = removechars(strHeader, "\"");        if (onlyValue)            ret = format("%s,", Json(strHeader).toString());        else            ret = format("\"%s\": %s,", headerName, Json(strHeader).toString());    }    if (onlyValue && !ret.length)        ret = `"",`;    return ret;},V
    auto hdr = email.getHeader(headerName);,V
    string ret;,V
header,v
string jsonizeHeader(IncomingEmail email, string headerName, bool removeQuotes = false, bool onlyValue=false),V
        domain["defaultUser"].length && ,V
Bson(null) ,v
!= ,v
    if (dbConfig == Bson(null)),V
    if (emailInDb == Bson(null)),V
    if (userResult == Bson(null)),V
    if (convFind != Bson(null)),V
    if (res != Bson(null)),V
),v
    addressIsLocal => dbDomain, dbUser,V
    writeln;,V
"));,v
null,v
(",v
Bson,v
    writeln("XXX 5");,V
:,v
    assert(addressIsLocal("random@testdatabase.com")); // has default user:,V
    // has default user:,V
db_insertalltest,v
    getAddressFilters => dbUserrule, dbUser,V
// XXX test when test DB,V
            writeln("XXX 4");,V
        },,V
                "From" : "juanjo@juanjoalvarez.net",V
        "match_headers" : {                "From" : "juanjo@juanjoalvarez.net"        },,V
            writeln("XXX 2");,V
            writeln("XXX 1");,V
            match.totalSizeType  = bsonStr(rule["match_sizeRuleType"]) ==  "SmallerThan"?                                                                              SizeRuleType.SmallerThan:                                                                              SizeRuleType.GreaterThan;,V
            if (match.total,V
],v
        "match_withSizeLimit" : false,,V
        "match_withSizeLimit" : true,,V
        "action_tagFavorite" : false,,V
[,v
        "match_withSizeLimit" : false,V
            match.withSizeLimit  = bsonBool      (rule["match_withSizeLimit"]);,V
    match9.withSizeLimit = true;,V
